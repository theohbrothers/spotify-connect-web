name: ci-master-pr

on:
  push:
    branches:
    - master
    tags:
    - '**'
  pull_request:
    branches:
    - master

jobs:
  update-draft-release:
    # needs: [test]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-draft-release:
    needs: [ build-docker-image ]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - id: release-drafter
      uses: release-drafter/release-drafter@v5
      with:
        # config-name: release-drafter.yaml
        publish: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docker-image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Display system info (linux)
      run: |
        set -e
        hostname
        whoami
        cat /etc/*release
        lscpu
        free
        df -h
        pwd
        docker info
        docker version

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    # See: https://github.com/docker/build-push-action/blob/v2.6.1/docs/advanced/cache.md#github-cache
    # - name: Cache Docker layers
    #   uses: actions/cache@v2
    #   with:
    #     path: /tmp/.buildx-cache
    #     key: ${{ runner.os }}-buildx-${{ github.sha }}
    #     restore-keys: |
    #       ${{ runner.os }}-buildx-

    - name: Prepare
      id: prep
      run: |
        set -e

        # Get 'namespace' and 'project-name' from 'namespace/project-name'
        CI_PROJECT_NAMESPACE=$( echo "${{ github.repository }}" | cut -d '/' -f 1 )
        CI_PROJECT_NAME=$( echo "${{ github.repository }}" | cut -d '/' -f 2 )

        # Get 'ref-name' from 'refs/heads/ref-name'
        REF=$( echo "${GITHUB_REF}" | rev | cut -d '/' -f 1 | rev )
        SHA_SHORT=$( echo "${GITHUB_SHA}" | cut -c1-7 )

        # Generate the final tags. E.g. 'release-v1.0.0' and 'release-b29758a-v1.0.0'
        REF_AND_SHA_SHORT="${REF}-${SHA_SHORT}"

        # Set step output(s)
        echo "::set-output name=CI_PROJECT_NAMESPACE::$CI_PROJECT_NAMESPACE"
        echo "::set-output name=CI_PROJECT_NAME::$CI_PROJECT_NAME"
        echo "::set-output name=REF::$REF"
        echo "::set-output name=SHA_SHORT::$SHA_SHORT"
        echo "::set-output name=REF_AND_SHA_SHORT::$REF_AND_SHA_SHORT"

    - name: Login to DockerHub
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
      uses: docker/login-action@v1
      with:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.DOCKERHUB_REGISTRY_PASSWORD }}

    - name: Build (PRs)
      id: docker_build_pr
      # Run only on pull requests
      if: github.event_name == 'pull_request'
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/arm64
        push: false
        tags: |
          ${{ github.repository }}:${{ steps.prep.outputs.REF }}
          ${{ github.repository }}:${{ steps.prep.outputs.REF_AND_SHA_SHORT }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Build and push (master)
      id: docker_build_master
      # Run only on master
      if: github.ref == 'refs/heads/master'
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/arm64
        push: true
        tags: |
          ${{ github.repository }}:${{ steps.prep.outputs.REF }}
          ${{ github.repository }}:${{ steps.prep.outputs.REF_AND_SHA_SHORT }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Build and push (release)
      id: docker_build_release
      # Run only on tags
      if: startsWith(github.ref, 'refs/tags/')
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/arm64
        push: true
        tags: |
          ${{ github.repository }}:${{ steps.prep.outputs.REF }}
          ${{ github.repository }}:${{ steps.prep.outputs.REF_AND_SHA_SHORT }}
          ${{ github.repository }}:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Image digest (PRs)
      if: github.event_name == 'pull_request'
      run: echo ${{ steps.docker_build_pr.outputs.digest }}

    - name: Image digest (master)
      if: github.ref == 'refs/heads/master'
      run: echo ${{ steps.docker_build_master.outputs.digest }}

    - name: Image digest (release)
      if: startsWith(github.ref, 'refs/tags/')
      run: echo ${{ steps.docker_build_release.outputs.digest }}

    - name: List docker images
      run: docker images

    - name: Clean-up
      run: docker logout
      if: always()
